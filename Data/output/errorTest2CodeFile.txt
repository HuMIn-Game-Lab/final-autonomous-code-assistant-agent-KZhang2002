Relative Filepath: ../Code/TestCodeError2/main.cpp
//#include "test1.h"
#include <iostream>

using namespace std;

int Main() {
    // syntax error
    int missing_semicolon

    // undeclared variable error
    int uninitialized_variable;
    int result = uninitialized_variable;

    // undefined reference error
    int temp = test1::add(1, 2);
    cout << "Called test1.cpp from main. Answer: " << temp << endl;
    return 0;
}
//#include "test1.h"
#include <iostream>

using namespace std;

int Main() {
    // syntax error
    int missing_semicolon

    // undeclared variable error
    int uninitialized_variable;
    int result = uninitialized_variable;

    // undefined reference error
    int temp = test1::add(1, 2);
    cout << "Called test1.cpp from main. Answer: " << temp << endl;
    return 0;
}
//#include "test1.h"
#include <iostream>

using namespace std;

int Main() {
    // syntax error
    int missing_semicolon

    // undeclared variable error
    int uninitialized_variable;
    int result = uninitialized_variable;

    // undefined reference error
    int temp = test1::add(1, 2);
    cout << "Called test1.cpp from main. Answer: " << temp << endl;
    return 0;
}
Relative Filepath: ../Code/TestCodeError2/test1.cpp
bleep blorp

#include "test1.h"
#include <iostream>

using namespace std;

int test1::add(int a, int b) {
    int fake; //initialize unused variables to test for getting contextual lines
    int notreal;
    aghghghhghgh
    cout << "Add function called in test1.cpp. a = " << a << ", b = " << b << endl;
    int fascimle;
    return a + b;
}
bleep blorp

#include "test1.h"
#include <iostream>

using namespace std;

int test1::add(int a, int b) {
    int fake; //initialize unused variables to test for getting contextual lines
    int notreal;
    aghghghhghgh
    cout << "Add function called in test1.cpp. a = " << a << ", b = " << b << endl;
    int fascimle;
    return a + b;
}
bleep blorp

#include "test1.h"
#include <iostream>

using namespace std;

int test1::add(int a, int b) {
    int fake; //initialize unused variables to test for getting contextual lines
    int notreal;
    aghghghhghgh
    cout << "Add function called in test1.cpp. a = " << a << ", b = " << b << endl;
    int fascimle;
    return a + b;
}
